/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { CommissionListRelationFilter } from "../../commission/base/CommissionListRelationFilter";
import { ReportListRelationFilter } from "../../report/base/ReportListRelationFilter";
import { EmployeeListRelationFilter } from "../../employee/base/EmployeeListRelationFilter";

@InputType()
class OrganizationWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  inn?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CommissionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommissionListRelationFilter)
  @IsOptional()
  @Field(() => CommissionListRelationFilter, {
    nullable: true,
  })
  commissions?: CommissionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReportListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReportListRelationFilter)
  @IsOptional()
  @Field(() => ReportListRelationFilter, {
    nullable: true,
  })
  reports?: ReportListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeeListRelationFilter)
  @IsOptional()
  @Field(() => EmployeeListRelationFilter, {
    nullable: true,
  })
  employees?: EmployeeListRelationFilter;
}

export { OrganizationWhereInput as OrganizationWhereInput };
